
@rendermode @(new InteractiveWebAssemblyRenderMode(false))

@page "/auth"
<div class="container">
	<div class="auth-container @cssClass" id="container">
		<div class="form-container sign-up-container">
			<form action="#">
				<h1>Создать аккаунт</h1>
				<span>Или используйте паспорт для регистрации</span>
				<EditForm class=".form" Model="@registerModel" OnValidSubmit="@(async () => await RegisterAsync())">
					<DataAnnotationsValidator />
					<ValidationSummary />
					<input type="text" placeholder="4619 111111" @bind-value="@registerModel.Passport" />
					<input type="text" placeholder="ФИО" @bind-value="@registerModel.Name" />
					<input type="email" placeholder="Email" @bind-value="@registerModel.Email" />
					<input type="password" placeholder="Пароль" @bind-value="@registerModel.Password" />
					<button type="submit">Зарегистрироваться</button>
				</EditForm>
				
			</form>
		</div>
		<div class="form-container sign-in-container">
			<EditForm class="form" Model="loginModel" OnValidSubmit="@(async () => await LoginAsync())">
				<h1>Авторизация</h1>
				<input type="email" placeholder="Email" />
				<input type="password" placeholder="Пароль" />
				<a href="#">Забыли пароль?</a>
				<button type="submit">Войти</button>
			</EditForm>
		</div>
		<div class="overlay-container">
			<div class="overlay">
				<div class="overlay-panel overlay-left">
					<h1>Здравствуйте!</h1>
					<p>Для продолжение пройдите процедуру авторизации</p>
					<button @onclick="Swap" class="ghost" id="signIn">Авторизоваться</button>
				</div>
				<div class="overlay-panel overlay-right">
					<h1>Здравствуйте!</h1>
					<p>Зарегистрируйтесь, чтобы начать пользоваться сервисом</p>
					<button @onclick="Swap" class="ghost" id="signUp">Зарегистрироваться</button>
				</div>
			</div>
		</div>
	</div>
</div>


@code {
	private RegisterModel registerModel {get;set;} = new();
	private LoginModel loginModel { get; set; } = new();

	private bool toggle;
	private string cssClass => toggle ? "right-panel-active" : "";

	private async Task RegisterAsync()
	{

	}

	private async Task LoginAsync()
	{
		
	}

	private void Swap()
	{
		toggle = !toggle;
	}
}
